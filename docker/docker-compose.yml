version: '2.1'


services:

  # Daniils services / containers
  # ------------------- Angular frontend from dockerfile ---------------------------- #
  rsww_175651_frontend:
    build:
      context: ../frontend
      target: builder
    ports:
      - 4200:4200
    volumes:
      - ../frontend:/project
      - /project/node_modules
  
  # ------------------- Postgres from image ---------------------------- #
  rsww_175651_postgres:
    build: ./ctx-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=svc_client
    volumes:
      - rsww_175651_vol_postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 2s
      timeout: 10s
      retries: 5

  # ------------------- mongo from dockerfile ---------------------------- #
  rsww_175651_mongodb:
    build: ./ctx-mongodb
    ports:
      - 27017:27017
    volumes:
      - rsww_175651_vol_mongo:/data/db

  # ------------------- PgAdmin from image ---------------------------- #
  rsww_175651_pgadmin:
    build: ./ctx-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  # ------------------- Client svc from dockerfile ---------------------------- #
  rsww_175651_svc_client:
    build: ./ctx-svc-client
    ports:
      - 8089:8089
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      rsww_175651_postgres:
        condition: service_healthy
  # spytac o porty, voluminy lub inne ewentualne potrzebne konfiguracje


  # ------------------- Hotel svc from dockerfile ---------------------------- #

  rsww_175651_svc_hotel:
    build: ./ctx-svc-hotel
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "1439:1439"



# ------------------- Define named volumes for databases ------------------------- #
volumes:
  rsww_175651_vol_mongo:
  rsww_175651_vol_postgres:
