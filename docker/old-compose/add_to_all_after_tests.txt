# Piotrs services / containers
  # ------------------- Tour operator svc from dockerfile ---------------------------- #
  tourOperator:
    container_name: rsww_175651_svc_tourOperator
    build:
      context: ../dockerfiles
      dockerfile: Dockerfile-svc-tourOperator

  # ------------------- Mongodb from image ---------------------------- #
   mongodb:
    image: mongo
    container_name: rsww_175651_mongodb
    ports:
      - 27017:27017
    volumes:
      - ../volumes/tour_operator_mongodb/db:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass

  # ------------------- MongoExpress from image ---------------------------- #
  mongo-express:
    image: mongo-express
    container_name: rsww_175651_mongoExpress
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb

  # ------------------- Axon from image ---------------------------- #
  axonserver:
    image: axoniq/axonserver
    container_name: rsww_175651_Axon
    ports:
      - 8024:8024
      - 8124:8124
    environment:
      - AXONSERVER_HOSTNAME=axonserver

  # Jans services / containers
  # ------------------- Rabbitmq from dockerfile ---------------------------- #
  rabbitmq:
    container_name: rsww_175651_rabbitmq
    build: 
      context: ../dockerfiles
      dockerfile: Dockerfile-rabbitmq
    environment:
      - RABBITMQ_USER=testuser
      - RABBITMQ_PASSWORD=testpassword
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 2s
      timeout: 10s
      retries: 5
    ports:
      - "15672:15672"

  # ------------------- Mongodb from dockerfile ---------------------------- #
  #yetirswwmongo:
  #  build: ./svc-mongo
  #  environment:
  #    - MONGO_INITDB_DATABASE=yetirsww
  #  ports:
  #   - "27017:27017"

  # ------------------- Tour operator svc from dockerfile ---------------------------- #
  #yetirswwtouroperator:
  #  build: ./svc-touroperator
  #  environment:
  #    - SPRING_PROFILES_ACTIVE=docker
  #  depends_on:
  #    yetirswwrmq:
  #      condition: service_healthy

  # ------------------- Hotel svc from dockerfile ---------------------------- #
  hotel:
    build: 
      context: ../dockerfiles
      dockerfile: Dockerfile-svc-hotel
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "1439:1439"

    

   # ------------------- Travel Agency svc from dockerfile ---------------------------- #
   travelAgency:
   container_name: rsww_175651_travelAgency
    build: 
      context: ../dockerfiles
      dockerfile: Dockerfile-svc-travelAgency
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "1439:1439"

   